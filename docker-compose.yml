version: '3'
services:
  iperfclient:
    build:
      context: .
      dockerfile: dev-IperfClient/Dockerfile   
    # image: felixfischer/wireguard:latest
    container_name: IperfClient
    volumes:
      - ./dev-IperfClient/etc/wireguard:/etc/wireguard  # ใช้ $(pwd) ใน docker-compose ให้ใช้ relative path
      - ./iperf.log:/home/iperf/iperf.log
    ports:
      - "55555:38945/udp"
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    tty: true
    stdin_open: true  # เทียบเท่ากับ --interactive
    networks:
      vpn-net:
        ipv4_address: 172.16.100.20      
      # vpn-net2:
      #   ipv4_address: 172.16.200.20          

# docker exec -it IperfClient bash
###################################################

  vpnserver:
    build:
      context: .
      dockerfile: dev-VPNserver/Dockerfile   
    deploy:
      resources:
        limits:
          cpus: '${CPU_limits}'       # กำหนดการใช้ CPU         
          memory: '${RAM_limits}'     # กำหนดการใช้ RAM (เช่น 512 MB)
        # reservations:
          # cpus: '1'        
          # memory: '128M'     # กำหนด RAM ที่ container ควรจะมีอย่างน้อย (256 MB)   
    cpuset: '1'
    # image: weejewel/wg-easy
    container_name: VPNserver
    restart: unless-stopped
    # ports:
    #   - "51001:51820/udp"
    #   - "51001:51821/tcp"
    ports:
      - "60000:51820/udp"
      - "60000:51821/tcp"    
    volumes:
      - ~/.wg-easy:/etc/wireguard
    environment:
      # - WG_HOST=localhost
      - WG_HOST=172.16.100.10
      - PASSWORD=admin
      - WG_PORT=51000
      - WG_MTU=1420
      - WG_PERSISTENT_KEEPALIVE=25
      - WG_DEFAULT_ADDRESS=10.0.0.x
      - WG_DEFAULT_DNS=1.1.1.1, 1.1.0.0
      - WG_ALLOWED_IPS=0.0.0.0/0
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
      - net.ipv4.ip_forward=1
    networks:    
      vpn-net:
        ipv4_address: 172.16.100.10              
      nat-server:
        ipv4_address: 192.168.100.254
   
# docker exec -it VPNserver bash
#######################################################

  iperfserver:
    build:
      context: .
      dockerfile: dev-IperfServer/Dockerfile  
    container_name: IperfServer
    ports:
      - "8082:80"
      - "5201:5201"
    networks:      
      nat-server:
        ipv4_address: 192.168.100.100   

# docker exec -it IperfServer bash
# iperf3 -c localhost -t 10


networks:
  vpn-net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.16.100.0/24
  # vpn-net2:
  #   driver: bridge
  #   ipam:
  #     config:
  #       - subnet: 172.16.200.0/24              

  nat-server:
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.100.0/24        
  # nat-server2:
  #   driver: bridge
  #   ipam:
  #     config:
  #       - subnet: 192.168.200.0/24            


  # macvlan_net:
  #   driver: macvlan
  #   driver_opts:
  #     parent: eth0  # ชื่อของอินเทอร์เฟซเครือข่ายจริงที่ต้องการใช้งาน
  #   ipam:
  #     config:
  #       - subnet: 192.168.1.0/24
  #         gateway: 192.168.1.1
# docker-compose up -d

